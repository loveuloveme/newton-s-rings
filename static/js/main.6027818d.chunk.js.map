{"version":3,"sources":["App.js","reportWebVitals.js","index.js","processData.js","utils.js"],"names":["ImageSelector","props","className","onClick","id","src","process","url","name","App","canvasRef","React","createRef","fileRef","state","bg","dataIntense","Array","fill","dataMinMax","mainColor","images","e","this","_loadImage","context","current","getContext","img","Image","onload","drawImage","_calc","URL","createObjectURL","target","files","setState","alert","colorArray","i","push","getImageData","data","processData","intense","minMax","getAverageRGB","click","style","marginRight","backgroundImage","_clickAdd","bind","onChange","_handleFileSelected","ref","type","width","height","map","item","index","_loadImageUrl","marginLeft","generateData","options","maintainAspectRatio","generateMinLineData","a","b","generateMinData","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","grayscaleImageData","length","brightness","parseInt","pointMaxMin","max","min","maxX","minX","calc","getX","pointArr","lastDiff","Number","MIN_VALUE","x","arr","module","exports","MAX_VALUE","dataScaled","value","array","smoothing","newArray","sum","smoothArray","Math","floor","getLabels","list","y","r","xAvg","yAvg","xmAvg","ymAvg","xmAvgSq","xmAvgymAvg","forEach","reduce","dataMin","labelMin","labels","datasets","label","lineTension","backgroundColor","borderColor","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","lastX","approximate","rgb","g","count","blockSize"],"mappings":"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","file":"static/js/main.6027818d.chunk.js","sourcesContent":["import React from 'react';\nimport {Bubble, Line} from 'react-chartjs-2';\n\nimport './App.css';\n\nimport {processData, minMax} from './processData.js';\nimport {generateData, generateMinData, getAverageRGB, generateMinLineData} from './utils.js';\n\nfunction ImageSelector(props){\n    return(\n        <div className=\"image-selector__item\" onClick={() => {props.onClick(props.id)}}>\n            <img src={process.env.PUBLIC_URL+props.url} className={\"apple-shadow\"}/>\n            <span className=\"image-selector__item-name\">{props.name}</span>\n        </div>\n    );\n}\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.canvasRef = React.createRef();\n        this.fileRef = React.createRef();\n\n        this.state = {\n            bg: \"\",\n            dataIntense: new Array(1280).fill(0),\n            dataMinMax: [],\n            mainColor: \"\",\n            images: [\n                {name: \"435\", url: \"/ringsImages/zero435.bmp\"},\n                {name: \"546\", url: \"/ringsImages/zero546.bmp\"},\n                {name: \"578\", url: \"/ringsImages/zero578.bmp\"},\n                {name: \"630\", url: \"/ringsImages/zero630.bmp\"}\n            ]\n        }\n    }\n\n    _handleFileSelected(e){\n        this._loadImage(e);\n    }\n\n    _loadImage(e){\n        try{\n            var context = this.canvasRef.current.getContext('2d');\n            \n            var img = new Image();\n            img.onload = () => {\n                context.drawImage(img, 0, 0, 1280, 960);\n                this._calc();\n            }\n\n            img.src = URL.createObjectURL(e.target.files[0]);\n\n            this.setState({\n                bg: img.src\n            });\n        }catch(e){\n            alert(\"Something went wrong\");\n        }\n    }\n\n    _loadImageUrl(id){\n        try{\n            var context = this.canvasRef.current.getContext('2d');\n            \n            var img = new Image();\n\n            img.onload = () => {\n                context.drawImage(img, 0, 0, 1280, 960);\n                this._calc();\n            }\n\n            img.src = process.env.PUBLIC_URL+this.state.images[id].url;\n            this.setState({\n                bg: img.src\n            });\n\n        }catch(e){\n            alert(\"Something went wrong\");\n        }\n    }\n\n    _calc(){\n        var context = this.canvasRef.current.getContext('2d');\n\n        var colorArray = [];\n\n        for(var i = 0; i < 1280; i++){\n            colorArray.push(context.getImageData(i, 940, 1, 1).data);\n        }\n\n        this.setState({\n            dataIntense: processData(colorArray).intense,\n            dataMinMax: processData(colorArray).minMax,\n            mainColor: getAverageRGB(context.getImageData(0, 0, 1280, 960))\n        });\n    }\n\n    _clickAdd(){\n        this.fileRef.current.click();\n    }\n\n    render(){\n        return (\n            <div className=\"App\">\n                <section>\n                    <div style={{marginRight: 0}}>\n                        <div className=\"section-name\">Изображение</div>\n                        <div\n                            className=\"canvas apple-shadow\"\n                            style={{backgroundImage: `url(${this.state.bg})`}}\n                            onClick={this._clickAdd.bind(this)}\n                        >\n                            <input\n                                className=\"canvas-input\"\n                                onChange={this._handleFileSelected.bind(this)}\n                                ref={this.fileRef}\n                                type=\"file\"\n                            />\n                            <canvas ref={this.canvasRef} width=\"1280\" height=\"960\"></canvas>\n                            \n                            {this.state.bg == \"\" ? <div className=\"canvas-add-image\">Загрузить</div>: <></>}\n                        </div>\n                        <div className=\"image-selector\">\n                            {this.state.images.map((item, index) => <ImageSelector url={item.url} name={item.name} onClick={this._loadImageUrl.bind(this)} key={index} id={index}/>)}\n                        </div>\n                    </div>\n\n                    <div className=\"graph-wrapper\"  style={{marginLeft: 0}}>\n                        <div className=\"section-name\">Графики</div>\n                        <div className=\"graph apple-shadow\">\n                            <Line\n                                data={generateData(this.state.dataIntense, this.state.mainColor, this.state.dataMinMax)}\n                                options={{\n                                    maintainAspectRatio: false\n                                }}\n                            />\n                        </div>\n                        <div className=\"graph apple-shadow\">\n                            <div className=\"equa\">{\"f(x) = \"+(generateMinLineData(this.state.dataMinMax).a ? generateMinLineData(this.state.dataMinMax).a : \"?\") +\"x + \"+(generateMinLineData(this.state.dataMinMax).a ? generateMinLineData(this.state.dataMinMax).b : \"?\")}</div>\n                            <Line\n                                data={generateMinData(this.state.dataMinMax)}\n                                options={{maintainAspectRatio: false}}\n                            />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function grayscaleImageData(data) {    \r\n    for (var i = 0; i < data.length; i += 4) {\r\n        var brightness = parseInt(0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]);\r\n        data[i] = brightness\r\n        data[i + 1] = brightness\r\n        data[i + 2] = brightness\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nfunction smoothArray(array, smoothing) {\r\n    var newArray = [];\r\n    for (var i = 50; i < array.length; i++) {\r\n        var sum = 0;\r\n\r\n        for (var index = i - smoothing; index <= i + smoothing; index++) {\r\n            var thisIndex = index < 0 ? index + array.length : index % array.length;\r\n            sum += array[thisIndex];\r\n        }\r\n        newArray[i] = sum/((smoothing*2)+1);\r\n    }\r\n\r\n    return newArray;\r\n}\r\n\r\n\r\nfunction processData(data){\r\n    var min = Number.MAX_VALUE;\r\n    var max = 0;\r\n\r\n    var dataScaled = [];\r\n\r\n    for(var i = 0; i < data.length; i++){\r\n        var value = grayscaleImageData(data[i])[0];\r\n\r\n        if(value < min) min = value;\r\n        if(value > max) max = value;\r\n\r\n        dataScaled.push(value);\r\n    }\r\n\r\n    dataScaled = smoothArray(dataScaled, 10);\r\n\r\n    // var end = false;\r\n    // for(var i = 1020; i < dataScaled.length - 1; i++){\r\n    //     if(!end){\r\n    //         if(dataScaled[i] > dataScaled[i + 1] && dataScaled[i] > dataScaled[i - 1]){\r\n    //             if(dataScaled[i] < max){\r\n    //                 end = true;\r\n    //             }\r\n    //         }else if(dataScaled[i] < dataScaled[i + 1] && dataScaled[i] < dataScaled[i - 1]){\r\n    //             if(dataScaled[i] > min){\r\n    //                 end = true;\r\n    //             }\r\n    //         }\r\n    //     }else{\r\n    //         dataScaled[i] = 0;\r\n    //     }\r\n    // }\r\n\r\n    var dataMinMax = minMax(dataScaled);\r\n\r\n    var x = (dataMinMax[dataMinMax.length - 1].maxX + dataMinMax[dataMinMax.length - 1].minX)/2;\r\n\r\n    for(var i = 50; i < dataScaled.length; i++){\r\n        //dataScaled[i] -= dataScaled[50];\r\n    }\r\n\r\n    var arr = [];\r\n\r\n    if(x != -1){\r\n        for(var i = 0; i < Math.floor(x); i++){\r\n            arr.push(dataScaled[i]);\r\n        }\r\n\r\n        return {intense: arr, minMax: dataMinMax};\r\n    }\r\n\r\n    return {intense: dataScaled, minMax: dataMinMax};\r\n}\r\n\r\nfunction minMax(data){\r\n    function pointMaxMin(){\r\n        this.max = null;\r\n        this.min = null;\r\n        this.maxX = null;\r\n        this.minX = null;\r\n\r\n        this.calc = () => (this.max - this.min)/(this.max + this.min);\r\n        this.getX = () => (this.maxX+this.minX)/2;\r\n    }\r\n\r\n    var pointArr = [];\r\n\r\n    for(var i = 1; i < data.length - 1; i++){\r\n        if(data[i] > data[i + 1] && data[i] > data[i - 1]){\r\n            if(pointArr.length == 0){\r\n                pointArr.push(new pointMaxMin());\r\n            }\r\n            \r\n            pointArr[pointArr.length - 1].max = data[i];\r\n            pointArr[pointArr.length - 1].maxX = i;\r\n\r\n        }else if(data[i] < data[i + 1] && data[i] < data[i - 1]){\r\n            if(pointArr.length == 0){\r\n                continue;\r\n                //pointArr.push(new pointMaxMin());\r\n            }\r\n\r\n            if(pointArr[pointArr.length - 1].max == null) continue; \r\n\r\n            pointArr[pointArr.length - 1].min = data[i];\r\n            pointArr[pointArr.length - 1].minX = i;\r\n            pointArr.push(new pointMaxMin());\r\n        }\r\n    }\r\n\r\n    var lastDiff = Number.MIN_VALUE;\r\n    var x = -1;\r\n\r\n    for(var i = 0; i < pointArr.length; i++){\r\n        if((pointArr[i].max - pointArr[i].min) >= lastDiff){\r\n            lastDiff = pointArr[i].max - pointArr[i].min;\r\n\r\n            x = i;\r\n        }\r\n    }\r\n\r\n    if(x != -1){\r\n        var arr = [];\r\n        for(var i = 0; i < x; i++){\r\n            arr.push(pointArr[i]);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    return pointArr;\r\n}\r\n\r\nmodule.exports = {\r\n    processData,\r\n    minMax\r\n};","function getLabels(data){\r\n    var list = [];\r\n    for(var i = 0; i <= data.length; i++){\r\n        list.push(i);\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\nfunction generateData(data, mainColor, dataMinMax){\r\n    \r\n    var dataMin = [];\r\n    var labelMin = [];\r\n\r\n    for(var i = 0; i < dataMinMax.length; i++){\r\n        dataMin.push(dataMinMax[i].calc());\r\n        dataMin.push(dataMinMax[i].calc());\r\n\r\n        labelMin.push(dataMinMax[i].maxX);\r\n        labelMin.push(dataMinMax[i].minX);\r\n    }\r\n\r\n    return {\r\n        labels: getLabels(data),\r\n        datasets: [\r\n            {\r\n                type:'line',\r\n                label: 'Интенсивность',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: mainColor,\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: mainColor,\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 1,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n\r\nfunction generateMinLineData(dataMinMax){\r\n    var data = [];\r\n\r\n    for(var i = 0; i < dataMinMax.length; i++){\r\n        data.push({x: dataMinMax[i].maxX, y: dataMinMax[i].calc(), r: 1});\r\n        data.push({x: dataMinMax[i].minX, y: dataMinMax[i].calc(), r: 1});\r\n    }\r\n\r\n    if(data.length == 0) return [];\r\n\r\n    var x = [];\r\n    var y = [];\r\n\r\n    var xmAvg = [];\r\n    var ymAvg = [];\r\n    var xmAvgSq = [];\r\n    var xmAvgymAvg = [];\r\n\r\n    var xAvg = 0;\r\n    var yAvg = 0;\r\n\r\n    data.forEach(item => {\r\n        x.push(item.x);\r\n        y.push(item.y);\r\n    });\r\n\r\n    xAvg = x.reduce((a, b) => a + b, 0);\r\n    yAvg = y.reduce((a, b) => a + b, 0);\r\n\r\n    x.forEach(item => {\r\n        xmAvg.push(item - xAvg);\r\n        xmAvgSq.push((item - xAvg)*(item - xAvg));\r\n    });\r\n\r\n    y.forEach((item, index) => {\r\n        ymAvg.push(item - yAvg);\r\n        xmAvgymAvg.push(ymAvg[index]*xmAvg[index]);\r\n    });\r\n\r\n    var a = xmAvgymAvg.reduce((a, b) => a + b, 0)/xmAvgSq.reduce((a, b) => a + b, 0);\r\n    var b = yAvg-xAvg*a;\r\n\r\n    return {a, b};\r\n}\r\n\r\nfunction approximate(a, b, data){\r\n    if(data.length == 0) return [];\r\n    var calc = (x) => a*x+b;\r\n\r\n    var dataMin = [];\r\n    var labelMin = [];\r\n    \r\n    var lastX = data[data.length - 1].x;\r\n\r\n    for(var i = 0; i < Math.floor(lastX); i += 1){\r\n        labelMin.push(i);\r\n        dataMin.push(calc(i));\r\n    }\r\n\r\n    return{\r\n        labelMin,\r\n        dataMin\r\n    }\r\n}\r\n\r\n\r\nfunction generateMinData(dataMinMax){\r\n    var data = [];\r\n\r\n    for(var i = 0; i < dataMinMax.length; i++){\r\n        data.push({x: dataMinMax[i].maxX, y: dataMinMax[i].calc(), r: 1});\r\n        data.push({x: dataMinMax[i].minX, y: dataMinMax[i].calc(), r: 1});\r\n    }\r\n\r\n    var {a,b} = generateMinLineData(dataMinMax);\r\n    var {labelMin, dataMin} = approximate(a, b, data);\r\n\r\n    return {\r\n        labels: labelMin,\r\n        datasets: [\r\n            {\r\n                type: 'bubble',\r\n                label: 'V',\r\n                fill: false,\r\n                backgroundColor: '#e74c3c',\r\n                borderColor: '#c0392b',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: '#c0392b',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 1,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data\r\n            },\r\n            {\r\n                type: 'line',\r\n                label: 'V(Аппроксимация)',\r\n                fill: false,\r\n                backgroundColor: '#3498db',\r\n                borderColor: '#3498db',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: '#3498db',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 1,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: dataMin\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n\r\nfunction getAverageRGB(data) {\r\n    \r\n    var blockSize = 5,\r\n        defaultRGB = {r:0,g:0,b:0},\r\n        data, width, height,\r\n        i = -4,\r\n        length,\r\n        rgb = {r:0,g:0,b:0},\r\n        count = 0;\r\n        \r\n    height = 960;\r\n    width = 1280;\r\n    \r\n\r\n    length = data.data.length;\r\n    \r\n    while ( (i += blockSize * 4) < length ) {\r\n        ++count;\r\n        rgb.r += data.data[i];\r\n        rgb.g += data.data[i+1];\r\n        rgb.b += data.data[i+2];\r\n    }\r\n\r\n    rgb.r = ~~(rgb.r/count);\r\n    rgb.g = ~~(rgb.g/count);\r\n    rgb.b = ~~(rgb.b/count);\r\n    \r\n    return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\r\n    \r\n}\r\n\r\n\r\nmodule.exports = {\r\n    generateData, generateMinData, getAverageRGB, generateMinLineData\r\n}"],"sourceRoot":""}